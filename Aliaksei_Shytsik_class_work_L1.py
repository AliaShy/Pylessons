# # Классная работа № 1 (19.09.2022):

# print("Hello, World!")  # Отображение на устройстве вывода надписи "Hello, World".

# print("The itsy bitsy spider\nclimbed up the waterspout.")  # Проверка работы escape-символа (переход на новую строку).
# print()
# print("Down came the rain\nand washed the spider out.")  # Проверка работы escape-символа (переход на новую строку).

# print("The itsy bitsy spider","climbed up","the waterspout.")  # У функции print 3 аргумента. Выводятся последовательно через пробел.

# print("My name is", "Python.")  # Функция print выведет 2 аргумента последовательно через пробел.
# print("Monty Python.")  # Функция print выведет аргумент с новой строки.

# print("My name is", "Python.", end=" ")  # Функция print выведет 2 аргумента и завершит вывод пробелом.
# print("Monty Python.")  # Данный аргумент будет выведен в одной строке с результатами вывода предыдущей функции через пробел.

# print("My", "name", "is", "Monty", "Python.", sep="-")  # Все аргументы будут выведены через дефис (-).

# print("My", "name", "is", sep="_", end="*")  # Аргументы будут выведены через "_", выполнение завершится выводом символа "*" без перехода на новую строку.
# print("Monty", "Python.", sep="*", end="*\n")  # Аргументы будут выведены через символ "*" в одной строке с результатами выполнения предыдущей функции. Вывод завершится симыолом "*" и переводом на новую строку.

# print(0o231)  # Восьмиричное представление числа 153. Результат выводится в десятичном формате.
# print(0O123)  # Восьмиричное представление числа 83. Результат выводится в десятичном формате.

# print(0x231)  # Шестнадцатиричное представление числа 561. Результат выводится в десятичном формате.
# print(0X123)  # Шестнадцатиричное представление числа 291. Результат выводится в десятичном формате.

# # Различные варианты использования escapr-символа "\":
# print('I\'m Monty Python.')  # В данном примере символ используется для отображения одиночной кавычки.
# print("I'm Monty Python.")  # В данном примере нет необходимости использовать \, поскольку весь текстовый аргумент взят в двойные кавычки.
# print("I like \"Monty Python\"")  # В данном примере \ необходим для отображения двойных кавычек, поскольку весь строковый аргумент взят в двойные кавычки.
# print('I like "Monty Python"')  # В данном примере нет необходимости использовать \ для отображения двойных кавычек, поскольку весь аргумент взят в одинарные. 

# # Использование Булевых значений:
# print(True>False)
# print(True<False)

# # Работа с переменными:
# x = 5  # Присвоение переменной x целочисленного значения 5.
# y = "John"  # Присвоение переменной y строкового значения John.
# print(x)  # Вывод значения переменной x.
# print(y)  # Вывод значения переменной y.

# # Переопределение переменных:
# x = 4  # Присвоение переменной x целочисленного значения 4.
# x = "Sally"  # Присвоение переменной x строкового значения Sally.
# print(x)  # Вывод значения переменной x. Выведется "Sally".

# # Способы объявления переменных:
# x = "John"  # Присвоение переменной x строкового значения John через двойные кавычки.
# print(x)  # Вывод значения переменной х.
# x = 'John'  # Присвоение переменной x строкового значения John через одинарные кавычки.
# print(x)  # Вывод значения переменной х. 

# # Решение простых математических задач:
# a = 3.0  # Присвоение значения переменной а. 
# b = 4.0  # Присвоение значения переменной b.
# c = (a**2 + b**2)**0.5  # Объявление переменной с с присвоением ей результата вычислений.
# print("c =", c)  # Вывод строкового аргумента и результата вычислений (переменной с).
